stages:
  - terraform
  - ansible

variables:
  TF_INPUT: false
  VBOX_MACHINES_DIR: "C:/Users/User/Downloads/CentOS-Stream-9-latest-x86_64-dvd1.iso"
  ANSIBLE_USER: "your_ssh_user"  # L'utente per SSH (deve essere lo stesso nelle VM)
  ANSIBLE_SSH_KEY: "C:/path/to/your/private/key"  # Percorso della tua chiave privata per SSH

terraform:
  stage: terraform
  script:
    # Verifica che i file del repository siano correttamente scaricati
    - echo "Verifica il contenuto del repository"
    - Get-ChildItem -Force  # Usa Get-ChildItem in PowerShell per elencare i file nella directory corrente

    # Naviga nella directory di Terraform per eseguire i comandi Terraform
    - cd terraform  # Cambia la directory nella cartella contenente i file di configurazione di Terraform

    # Inizializza Terraform e applica le configurazioni per creare le VM
    - echo "Inizializzo Terraform"
    - terraform init
    - terraform apply -auto-approve
  artifacts:
    paths:
      - ansible/terraform_output.json  # Output che puoi usare per ottenere gli IP delle VM
  tags:
    - windows

ansible:
  stage: ansible
  script:
    # Installare Ansible nel runner WSL (se non è già installato)
    - echo "Installazione di Ansible su WSL"
    - wsl sudo apt-get update
    - wsl sudo apt-get install -y ansible

    # Creare l'inventario con gli IP delle macchine appena create (assicurati che terraform_output.json contenga gli IP)
    - echo "Creazione dell'inventario Ansible"
    - python3 ansible/generate_inventory.py  # Assicurati che questo script generi un file inventory

    # Eseguire il playbook Ansible sulle VM CentOS 9
    - echo "Esecuzione del playbook Ansible"
    - wsl ansible-playbook -i ansible/inventory ansible/playbook.yml
  tags:
    - windows

  dependencies:
    - terraform
