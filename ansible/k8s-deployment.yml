- name: Deploy Flask and MySQL Applications on Kubernetes
  hosts: masters
  tasks:
    - name: Creare o aggiornare il namespace kyratech-prova
      command: kubectl create namespace kyratech-prova
      ignore_errors: yes  # Ignora l'errore se il namespace esiste gi√†
      register: namespace_result

    - name: Mostrare il risultato della creazione del namespace
      debug:
        var: namespace_result

    - name: Clonare o aggiornare il repository da GitHub
      git:
        repo: 'https://gitlab.com/gestionale90/k8s.git'
        dest: /tmp/k8s
        version: main
        force: yes  # Forza l'aggiornamento del repository
      register: git_clone_result

    - name: Mostrare il risultato della clonazione
      debug:
        var: git_clone_result

    - name: Eliminare i Pod esistenti per MySQL
      command: kubectl delete pod -l app=mysql -n kyratech-prova --ignore-not-found
      register: delete_mysql_pods_result

    - name: Mostrare il risultato dell'eliminazione dei Pod MySQL
      debug:
        var: delete_mysql_pods_result

    - name: Eliminare i Pod esistenti per Flask
      command: kubectl delete pod -l app=flask-app -n kyratech-prova --ignore-not-found
      register: delete_flask_pods_result

    - name: Mostrare il risultato dell'eliminazione dei Pod Flask
      debug:
        var: delete_flask_pods_result

    - name: Deploy Persistent Volume Claim per MySQL
      command: kubectl apply -f /tmp/k8s/mysql-pvc.yaml -n kyratech-prova
      register: pvc_result

    - name: Mostrare il risultato del PVC
      debug:
        var: pvc_result

    - name: Deploy MySQL ConfigMap per lo script di inizializzazione
      command: kubectl apply -f /tmp/k8s/init-sql-configmap.yaml -n kyratech-prova
      register: configmap_result

    - name: Mostrare il risultato del ConfigMap
      debug:
        var: configmap_result

    - name: Deploy MySQL Deployment
      command: kubectl apply -f /tmp/k8s/mysql-deployment.yaml -n kyratech-prova
      register: mysql_deployment_result

    - name: Mostrare il risultato del Deployment MySQL
      debug:
        var: mysql_deployment_result

    - name: Attendere che il pod MySQL sia in esecuzione
      command: kubectl wait --for=condition=ready pod -l app=mysql -n kyratech-prova --timeout=300s
      register: mysql_wait_result

    - name: Mostrare lo stato del pod MySQL
      debug:
        var: mysql_wait_result

    - name: Deploy MySQL Service
      command: kubectl apply -f /tmp/k8s/mysql-service.yaml -n kyratech-prova
      register: mysql_service_result

    - name: Mostrare il risultato del Service MySQL
      debug:
        var: mysql_service_result

    - name: Deploy Flask Deployment
      command: kubectl apply -f /tmp/k8s/flask-deployment.yaml -n kyratech-prova
      register: flask_deployment_result

    - name: Mostrare il risultato del Deployment Flask
      debug:
        var: flask_deployment_result

    - name: Deploy Flask Service
      command: kubectl apply -f /tmp/k8s/flask-service.yaml -n kyratech-prova
      register: flask_service_result

    - name: Mostrare il risultato del Service Flask
      debug:
        var: flask_service_result

    - name: Verificare lo stato del pod Flask
      command: kubectl wait --for=condition=ready pod -l app=flask-app -n kyratech-prova --timeout=300s
      register: flask_wait_result

    - name: Mostrare lo stato del pod Flask
      debug:
        var: flask_wait_result
