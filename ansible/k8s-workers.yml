- hosts: master.example.com
  become: yes
  gather_facts: false
  tasks:
    - name: Get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set join command as a fact
      set_fact:
        join_command: "{{ join_command_raw.stdout.strip() }}"

- hosts: workers
  become: yes
  gather_facts: yes  # Necessario per raccogliere `ansible_facts`
  tasks:
    - name: Reset kubeadm to remove the node from the cluster
      shell: kubeadm reset -f
      ignore_errors: yes  # Ignora errori se il nodo non è già nel cluster

    - name: Remove old node_joined.txt file
      file:
        path: "{{ ansible_env.HOME }}/node_joined.txt"
        state: absent

    - name: Join cluster again
      shell: "{{ hostvars['master.example.com'].join_command }} --ignore-preflight-errors all >> {{ ansible_env.HOME }}/node_joined.txt"
      args:
        chdir: "{{ ansible_env.HOME }}"
      register: join_command_output
      ignore_errors: yes  # Permette di catturare errori senza interrompere il playbook

    - name: Show join command output and errors
      debug:
        msg: "{{ join_command_output.stdout | default('No output') }}"

    - name: Show join command error (if any)
      debug:
        msg: "{{ join_command_output.stderr | default('No error') }}"
      when: join_command_output.stderr is defined and join_command_output.stderr != ""



