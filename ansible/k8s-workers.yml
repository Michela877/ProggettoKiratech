- hosts: master.example.com
  become: yes
  gather_facts: false
  tasks:
    - name: Get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: workers
  become: yes
  tasks:
    - name: Check if node is already part of the cluster and if it is ready
      shell: kubectl get nodes {{ inventory_hostname }} --no-headers | awk '{ print $2 }'
      register: node_status
      ignore_errors: yes

    - name: Skip join if node is already ready
      debug:
        msg: "Node {{ inventory_hostname }} is already Ready. Skipping join."
      when: node_status.stdout == "Ready"
      ignore_errors: yes

    - name: Reset kubeadm to remove the node from the cluster
      shell: kubeadm reset -f
      when: node_status.stdout != "Ready" or node_status.stdout is undefined

    - name: Remove old node_joined.txt file
      file:
        path: "{{ ansible_env.HOME }}/node_joined.txt"
        state: absent
      when: node_status.stdout != "Ready" or node_status.stdout is undefined

    - name: Join cluster again
      shell: "{{ hostvars['master.example.com'].join_command }} --ignore-preflight-errors all >> {{ ansible_env.HOME }}/node_joined.txt"
      args:
        chdir: "{{ ansible_env.HOME }}"
      when: node_status.stdout != "Ready" or node_status.stdout is undefined
